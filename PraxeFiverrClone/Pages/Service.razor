@page "/service/{ServiceID:int}"
@using DataAccessLibrary
@using DataTemplateLibrary
@using DataTemplateLibrary.Models;
@using ServerManagement;
@inject CookieService.CookieManager Cookies;
@inject ServerManager ServerManager;
@inject NavigationManager NavManager;
@inject LoginService.LoginManager LoginManager;
@inherits ServicePage;

<h3>@ServiceName</h3>
<h2>@ServicePrice K</h2>
<p>@ServiceDescription</p>
<br />
<button @onclick = "buyService">buy service</button>

<p>@WarningText</p>

@if (WarningText == "not enought credits")
{
    <button @onclick="buyCredits">buy credits</button>
}
<p></p>

@code {
    public String WarningText{ get; set; }
    private void buyService()
    {
        DBTransaction Transaction = new DBTransaction(ServiceOwner, LoginManager.UserID, DateTime.Now, ServicePrice, ServiceID);
        try
        {
            if (ServerManager.CreateTransaction(LoginManager.SessionID, Transaction, ServiceOwner))
            {
                WarningText = "thank you for buying!";
            }
        } 
        catch (Exception e)
        {
            WarningText = "not enought credits";
        }
    }

    private void buyCredits()
    {
        NavManager.NavigateTo("/user/credit");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await LoginManager.Fetch();
        CheckLoggedIn();
    }

    private void CheckLoggedIn()
    {
        //kickes user if not signed in
        if (!LoginManager.LoggedIn)
        {
            NavManager.NavigateTo("/login");
        }
        //if owner redirects to the edit page
        if (ServiceOwner == LoginManager.UserID)
        {
            NavManager.NavigateTo("/user/edit/" + ServiceID);
        }
    }
}