@using LoginService;
@inject LoginManager loginManger;
<div class="header">

    <a class="logo" href="/"></a>

    <div class="navigation">
        <a href="/">
            Home
        </a>
        <a href="/market">
            Market
        </a>

        @if (!loginManger.LoggedIn)
        {
            <a href="/signup" class="header-register">
                Sign Up
            </a>
        }
        else
        {
            <a href="/user" class="header-register">
                Dashboard
            </a>
        }
    </div>

    <div class="mobile-navigation @GetMenuClass()">
        <a href="/" @onclick=ToggleMenu>
            Home
        </a>
        <a href="/market" @onclick=ToggleMenu>
            Market
        </a>

        @if (!loginManger.LoggedIn)
        {
            <a href="/signup" class="header-register" @onclick=ToggleMenu>
                Sign Up
            </a>
        }
        else
        {
            <a href="/user" class="header-register" @onclick=ToggleMenu>
                Dashboard
            </a>
        }
    </div>

    <button class="hamburger @GetMenuClass()" @onclick="ToggleMenu">
        <span></span>
        <span></span>
        <span></span>
    </button>

</div>
<div class="header-space"></div>

@code {
    private bool isMenuShown { get; set; }
    private bool initialzed;

    protected override void OnInitialized()
    {
        if (loginManger != null)
        {
            loginManger.OnUpdate += () =>
            {
                StateHasChanged();
            };
        }
    }

    private void ToggleMenu()
    {
        isMenuShown = !isMenuShown;
    }

    private string GetMenuClass()
    {
        return isMenuShown ? "menu-shown" : "";
    }
}